version: 3.1.{build}
install:
  - nuget restore
configuration: Release
platform: Any CPU
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: "3.0.0"
  assembly_file_version: "{version}"
  assembly_informational_version: "{version}"
environment:
  CoverityProjectToken:
    secure: pUUrynbyxCRpsAgGdKBVYDZCilwBmaWQ1Jg+rg5znr0=
  CoverityNotificationEmail:
    secure: m/ox72HU97EeJExWEFWx+0M9uov0cydn6E8mSaQzsQE=
build:
  project: HtmlSanitizer.sln
  verbosity: minimal
  publish_nuget: true
  publish_nuget_symbols: true
#after_build:
#  - ps: |
#      if ($env:CoverityProjectToken)
#      {
#        cov-build.exe --dir cov-int msbuild /t:Rebuild HtmlSanitizer.sln
#        nuget.exe install PublishCoverity -ExcludeVersion
#        PublishCoverity\tools\PublishCoverity.exe compress -o coverity.zip -i cov-int
#        PublishCoverity\tools\PublishCoverity.exe publish -t "$env:CoverityProjectToken" -e "$env:CoverityNotificationEmail" -r "$env:APPVEYOR_REPO_NAME" -z coverity.zip -d "AppVeyor $env:APPVEYOR_BUILD_VERSION" --codeVersion "$env:APPVEYOR_REPO_COMMIT"
#      }
test_script:
  - nuget.exe install OpenCover -ExcludeVersion
  - nuget.exe install NUnit.Runners -ExcludeVersion
  - OpenCover\tools\OpenCover.Console.exe -register:user -filter:"+[HtmlSanitizer]*" -target:"NUnit.ConsoleRunner\tools\nunit3-console.exe" "-targetargs:/domain:single HtmlSanitizer.Tests\bin\release\HtmlSanitizer.Tests.dll" -returntargetcode -hideskipped:All -output:coverage.xml
  - "SET PATH=C:\\Python34;C:\\Python34\\Scripts;%PATH%"
  - pip install codecov
  - codecov -f "coverage.xml"
